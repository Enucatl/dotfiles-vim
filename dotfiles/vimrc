set nocompatible

"show file name
set title

"no .swp files
set nobackup
set noswapfile

"no beeps
set novisualbell      
set noerrorbells

"background theme light/dark
set background=light

"avoid solarized conflict with 256 colors in the terminal
set t_Co=16

"detect filetype and use syntax highlighting
syntax enable
filetype plugin indent on

"no start message
set shortmess=atI

set autowrite
set nojoinspaces
set shiftround
set backspace=indent,eol,start  " allow backspacing on everything in insert mode
set magic
set showmatch                   " show matching parenthesis
set showmode
set linebreak
set virtualedit=all

"hides buffers instead of closing them, so that you can open more files
"without having to write the previous buffer
set hidden

"maximum text width=76 characters
set textwidth=76

"fold on every indent
set foldenable
set foldmethod=indent

"indent with 4 spaces
set cindent
set expandtab
set autoindent      " always indent
set smartindent
set tabstop=4       " a tab is four spaces
set shiftwidth=4    " number of spaces for autoindenting
set softtabstop=4
set smarttab

"Backup options:
set history=2000
set undolevels=1000 "maximum number of changes that can be undone

"window minimum height
set wmh=0

"don't open these files:
set wildignore+=*.swp,*.bak,*.pyc,*.pdf,*.idx,*.ps,*.dvi,*/out/**,*/vendor/**
set wildignore+=*/build/**,*/dist/**
set wildignore+=*.fls,*.fdb_latexmk
set suffixes=.pdf,.aux,.bak,.dvi,.gz,.idx,.log,.ps,.swp,.tar

"shift-M make shortcut 
map <S-m> :make<CR>

"paste mode useful to paste raw text without indentation problems
set pastetoggle=<F3> 

" Forward/back one file...
nmap <DOWN> :bn<CR>0
nmap <UP> :bp<CR>0

" For when you forget to sudo.. Really Write the file.
cmap w!! w !sudo tee % >/dev/null

"" Yank from the cursor to the end of the line, to be consistent with C and D.
nnoremap Y y$

"leader character
let mapleader=','

"faster : with ;!
nnoremap ; :

"-----------------------------------
"Plugins configuration
"-----------------------------------
"load pathogen from the submodules
runtime bundle/vim-pathogen/autoload/pathogen.vim
call pathogen#infect()
call pathogen#helptags()

"LaTeX Suite options:
let g:tex_flavor='latex'
"compile formats
let g:Tex_MultipleCompileFormats = 'dvi,ps'
let g:Tex_DefaultTargetFormat='pdf'
let g:Tex_FormatDependency_ps='dvi,ps'
let g:Tex_FormatDependency_pdf='dvi,ps,pdf'
let g:Tex_CompileRule_dvi='latex --interaction=nonstopmode $*'
let g:Tex_CompileRule_ps='dvips -o $*.ps $*.dvi'
let g:Tex_CompileRule_pdf='ps2pdf $*.ps'
let g:Tex_ViewRule_pdf='okular'

"open the gundo tree with F5
nnoremap <F6> :GundoToggle<CR>

"Haskell
let g:haddock_browser = "firefox"

"Insert arrows with left/right
autocmd FileType haskell,ruby,eruby,haml,coffee,puppet,r imap <buffer> <LEFT> <- 
autocmd FileType haskell,ruby,eruby,haml,coffee,puppet imap <buffer> <RIGHT> ->

"Thick arrows with right right
autocmd FileType coffee,ruby,eruby,haml,puppet imap <buffer> <RIGHT><RIGHT> =>

" NERD_tree config
let NERDTreeChDirMode=2
let NERDTreeIgnore=['\.vim$', '\~$', '\.pyc$', '\.swp$']
let NERDTreeSortOrder=['^__\.py$', '\/$', '*', '\.swp$',  '\~$']
let NERDTreeShowBookmarks=1
map <F4> :NERDTreeToggle<CR>

" The Silver Searcher
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0

  " bind K to Ag to grep word under cursor
  nnoremap K :Ag "\b<C-R><C-W>\b"<CR>:cw<CR>

  "use grep if ag is not installed
else
  " bind K to grep word under cursor
  set grepprg=grep\ -nH\ $*
  nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

endif

"ctags
"tags file name
set tags+=tags;/
" vim-dispatch to run compilers asynchronously
nnoremap <F9> :Dispatch<CR>
"generate tags
nnoremap <F8> :!ctags -R --exclude .*ignore .<CR>
"A-] - Open the definition in a vertical split
map <A-]> :vsp <CR>:exec("tag ".expand("<cword>"))<CR>

"ultisnips
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"

"syntastic file syntax checking
let g:syntastic_python_checkers=['pep8']
au BufRead,BufNewFile *.json set filetype=json
let g:syntastic_enable_signs=0
let g:syntastic_auto_loc_list=1
let g:syntastic_loc_list_height=5
let g:syntastic_stl_format='[%E{Err: %fe #%e}%B{, }%W{Warn: %fw #%w}]'
let g:syntastic_disabled_filetypes=['tex', 'latex']
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

"ctrlP bindings
nnoremap <leader>f :CtrlP<CR>
"with capital F you can write a folder name to narrow the search
nnoremap <leader>F :CtrlP 
nnoremap <leader>b :CtrlPBuffer<CR>
nnoremap <leader>m :CtrlPMRUFiles<CR>
nnoremap <leader>t :CtrlPTag<CR>
"ctrlP options
" Set no max file limit
let g:ctrlp_max_files=0
